# Generated by Django 5.1.6 on 2025-03-04 14:47

import datetime
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CzlonekZespolu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rola', models.CharField(choices=[('wlasciciel', 'Właściciel'), ('pracownik', 'Pracownik'), ('ksiegowosc', 'Księgowość')], default='pracownik', max_length=20)),
                ('imie', models.CharField(max_length=100)),
                ('nazwisko', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Firma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazwa', models.CharField(max_length=255)),
                ('nip', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('regon', models.CharField(blank=True, max_length=20, null=True)),
                ('ulica', models.CharField(max_length=255)),
                ('numer_domu', models.CharField(max_length=10)),
                ('numer_mieszkania', models.CharField(blank=True, max_length=10, null=True)),
                ('kod_pocztowy', models.CharField(max_length=10)),
                ('miejscowosc', models.CharField(max_length=255)),
                ('kraj', models.CharField(default='Polska', max_length=255)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logos/')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Kontrahent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazwa', models.CharField(max_length=255)),
                ('nip', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('regon', models.CharField(blank=True, max_length=20, null=True)),
                ('ulica', models.CharField(max_length=255)),
                ('numer_domu', models.CharField(max_length=10)),
                ('numer_mieszkania', models.CharField(blank=True, max_length=10, null=True)),
                ('kod_pocztowy', models.CharField(max_length=10)),
                ('miejscowosc', models.CharField(max_length=255)),
                ('kraj', models.CharField(default='Polska', max_length=255)),
                ('czy_firma', models.BooleanField(default=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('telefon', models.CharField(blank=True, max_length=20, null=True)),
                ('telefon_komorkowy', models.CharField(blank=True, max_length=20, null=True)),
                ('adres_korespondencyjny_ulica', models.CharField(blank=True, max_length=255, null=True)),
                ('adres_korespondencyjny_numer_domu', models.CharField(blank=True, max_length=10, null=True)),
                ('adres_korespondencyjny_numer_mieszkania', models.CharField(blank=True, max_length=10, null=True)),
                ('adres_korespondencyjny_kod_pocztowy', models.CharField(blank=True, max_length=10, null=True)),
                ('adres_korespondencyjny_miejscowosc', models.CharField(blank=True, max_length=255, null=True)),
                ('adres_korespondencyjny_kraj', models.CharField(blank=True, default='Polska', max_length=255, null=True)),
                ('dodatkowy_opis', models.TextField(blank=True, null=True)),
                ('firma', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='faktury.firma', verbose_name='Powiązana firma')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Faktura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typ_dokumentu', models.CharField(choices=[('FV', 'Faktura VAT'), ('FP', 'Faktura Proforma'), ('KOR', 'Korekta Faktury'), ('RC', 'Rachunek'), ('KP', 'KP - Dowód Wpłaty')], default='FV', max_length=3)),
                ('numer', models.CharField(max_length=50)),
                ('data_wystawienia', models.DateField(default=datetime.date.today)),
                ('data_sprzedazy', models.DateField()),
                ('miejsce_wystawienia', models.CharField(max_length=255)),
                ('typ_faktury', models.CharField(choices=[('sprzedaz', 'Sprzedaż'), ('koszt', 'Koszt')], default='sprzedaz', max_length=10)),
                ('zwolnienie_z_vat', models.BooleanField(default=False)),
                ('powod_zwolnienia', models.CharField(blank=True, choices=[('art43', 'Zwolnienie ze względu na rodzaj prowadzonej działalności (art. 43 ust 1 ustawy o VAT)'), ('art113', 'Zwolnienie ze względu na nieprzekroczenie 200 000 PLN obrotu (art. 113 ust 1 i 9 ustawy o VAT)'), ('art82', 'Zwolnienie na mocy rozporządzenia MF (art. 82 ust 3 ustawy o VAT)')], max_length=10, null=True)),
                ('sposob_platnosci', models.CharField(choices=[('przelew', 'Przelew'), ('gotowka', 'Gotówka')], max_length=20)),
                ('termin_platnosci', models.DateField()),
                ('status', models.CharField(choices=[('wystawiona', 'Wystawiona'), ('oplacona', 'Opłacona'), ('cz_oplacona', 'Częściowo opłacona')], default='wystawiona', max_length=20)),
                ('kwota_oplacona', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('jak_obliczyc_rabat', models.CharField(blank=True, choices=[('proc_netto', '% od ceny jednostkowej netto'), ('proc_brutto', '% od ceny jednostkowej brutto'), ('proc_calk_brutto', '% od ceny całościowej brutto'), ('kwotowo', 'Kwotowo')], max_length=20, null=True)),
                ('rabat_procentowy_globalny', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('rabat_kwotowy_globalny', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('waluta', models.CharField(choices=[('PLN', 'PLN'), ('EUR', 'EUR'), ('USD', 'USD')], default='PLN', max_length=3)),
                ('wystawca', models.CharField(blank=True, max_length=255, null=True)),
                ('odbiorca', models.CharField(blank=True, max_length=255, null=True)),
                ('uwagi', models.TextField(blank=True, null=True)),
                ('auto_numer', models.BooleanField(default=True, verbose_name='Automatyczna numeracja')),
                ('wlasny_numer', models.CharField(blank=True, max_length=50, null=True, verbose_name='Własny numer faktury')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('sprzedawca', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sprzedawca_faktury', to='faktury.firma')),
                ('nabywca', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nabywca_faktury', to='faktury.kontrahent')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('link', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PozycjaFaktury',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazwa', models.CharField(max_length=255)),
                ('rabat', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('rabat_typ', models.CharField(blank=True, choices=[('procent', 'Procent'), ('kwota', 'Kwota')], max_length=10, null=True)),
                ('ilosc', models.DecimalField(decimal_places=2, max_digits=10)),
                ('jednostka', models.CharField(max_length=10)),
                ('cena_netto', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('vat', models.CharField(choices=[('23', '23%'), ('8', '8%'), ('5', '5%'), ('0', '0%'), ('zw', 'zw')], max_length=5)),
                ('faktura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='faktury.faktura')),
            ],
        ),
        migrations.CreateModel(
            name='Produkt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazwa', models.CharField(max_length=255)),
                ('jednostka', models.CharField(max_length=10)),
                ('cena_netto', models.DecimalField(decimal_places=2, max_digits=10)),
                ('vat', models.CharField(choices=[('23', '23%'), ('8', '8%'), ('5', '5%'), ('0', '0%'), ('zw', 'zw')], max_length=5)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('imie', models.CharField(blank=True, max_length=100)),
                ('nazwisko', models.CharField(blank=True, max_length=100)),
                ('telefon', models.CharField(blank=True, max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ZadanieUzytkownika',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tytul', models.CharField(max_length=255)),
                ('opis', models.TextField(blank=True)),
                ('termin_wykonania', models.DateField()),
                ('wykonane', models.BooleanField(default=False)),
                ('data_utworzenia', models.DateTimeField(auto_now_add=True)),
                ('faktura', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='zadania_uzytkownika', to='faktury.faktura')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['termin_wykonania'],
            },
        ),
        migrations.CreateModel(
            name='Zespol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazwa', models.CharField(max_length=100)),
                ('opis', models.TextField(blank=True, null=True)),
                ('czlonkowie', models.ManyToManyField(related_name='zespoly', through='faktury.CzlonekZespolu', to=settings.AUTH_USER_MODEL)),
                ('firma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='zespoly', to='faktury.firma')),
            ],
        ),
        migrations.CreateModel(
            name='Zadanie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tytul', models.CharField(max_length=255)),
                ('opis', models.TextField()),
                ('termin_wykonania', models.DateField()),
                ('status', models.CharField(choices=[('nowe', 'Nowe'), ('w_trakcie', 'W trakcie'), ('zakonczone', 'Zakończone')], default='nowe', max_length=20)),
                ('priorytet', models.CharField(choices=[('niski', 'Niski'), ('sredni', 'Średni'), ('wysoki', 'Wysoki')], default='sredni', max_length=20)),
                ('data_utworzenia', models.DateTimeField(auto_now_add=True)),
                ('data_zakonczenia', models.DateTimeField(blank=True, null=True)),
                ('przypisane_do', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='zadania', to='faktury.czlonekzespolu')),
                ('zespol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='zadania', to='faktury.zespol')),
            ],
            options={
                'ordering': ['termin_wykonania', 'priorytet'],
            },
        ),
        migrations.CreateModel(
            name='Wiadomosc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temat', models.CharField(max_length=255)),
                ('tresc', models.TextField()),
                ('data_wyslania', models.DateTimeField(auto_now_add=True)),
                ('odczytana', models.BooleanField(default=False)),
                ('nadawca', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wyslane_wiadomosci', to='faktury.czlonekzespolu')),
                ('odbiorca', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='odebrane_wiadomosci', to='faktury.czlonekzespolu')),
                ('zespol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wiadomosci', to='faktury.zespol')),
            ],
            options={
                'ordering': ['-data_wyslania'],
            },
        ),
        migrations.AddField(
            model_name='czlonekzespolu',
            name='zespol',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='faktury.zespol'),
        ),
        migrations.CreateModel(
            name='Partnerstwo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_utworzenia', models.DateTimeField(auto_now_add=True)),
                ('aktywne', models.BooleanField(default=True)),
                ('auto_ksiegowanie', models.BooleanField(default=True)),
                ('firma1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partnerstwa_jako_firma1', to='faktury.firma', verbose_name='Firma 1')),
                ('firma2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partnerstwa_jako_firma2', to='faktury.firma', verbose_name='Firma 2')),
            ],
            options={
                'verbose_name_plural': 'Partnerstwa',
                'unique_together': {('firma1', 'firma2')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='czlonekzespolu',
            unique_together={('user', 'zespol')},
        ),
    ]
